/* Generated By:JJTree&JavaCC: Do not edit this line. MiniJajaConstants.java */
package fr.m1comp5.Analyzer;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJajaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 7;
  /** RegularExpression Id. */
  int MAIN = 8;
  /** RegularExpression Id. */
  int VOID = 9;
  /** RegularExpression Id. */
  int INT = 10;
  /** RegularExpression Id. */
  int BOOLEAN = 11;
  /** RegularExpression Id. */
  int FINAL = 12;
  /** RegularExpression Id. */
  int TRUE = 13;
  /** RegularExpression Id. */
  int FALSE = 14;
  /** RegularExpression Id. */
  int LENGTH = 15;
  /** RegularExpression Id. */
  int WHILE = 16;
  /** RegularExpression Id. */
  int RETURN = 17;
  /** RegularExpression Id. */
  int WRITE = 18;
  /** RegularExpression Id. */
  int WRITELN = 19;
  /** RegularExpression Id. */
  int IF = 20;
  /** RegularExpression Id. */
  int ELSE = 21;
  /** RegularExpression Id. */
  int ADD = 22;
  /** RegularExpression Id. */
  int SUB = 23;
  /** RegularExpression Id. */
  int DIV = 24;
  /** RegularExpression Id. */
  int MUL = 25;
  /** RegularExpression Id. */
  int SUP = 26;
  /** RegularExpression Id. */
  int INF = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int OR = 29;
  /** RegularExpression Id. */
  int EQUAL = 30;
  /** RegularExpression Id. */
  int NOT = 31;
  /** RegularExpression Id. */
  int INCREMENT = 32;
  /** RegularExpression Id. */
  int ASSIGN_INCREMENT = 33;
  /** RegularExpression Id. */
  int ASSIGN = 34;
  /** RegularExpression Id. */
  int SEMICOLON = 35;
  /** RegularExpression Id. */
  int COMMA = 36;
  /** RegularExpression Id. */
  int LCBRACKET = 37;
  /** RegularExpression Id. */
  int RCBRACKET = 38;
  /** RegularExpression Id. */
  int LPAR = 39;
  /** RegularExpression Id. */
  int RPAR = 40;
  /** RegularExpression Id. */
  int LBRACKET = 41;
  /** RegularExpression Id. */
  int RBRACKET = 42;
  /** RegularExpression Id. */
  int IDENTIFIER = 43;
  /** RegularExpression Id. */
  int NUMBER = 44;
  /** RegularExpression Id. */
  int STRING = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"class\"",
    "\"main\"",
    "\"void\"",
    "\"int\"",
    "\"boolean\"",
    "\"final\"",
    "\"true\"",
    "\"false\"",
    "\"length\"",
    "\"while\"",
    "\"return\"",
    "\"write\"",
    "\"writeln\"",
    "\"if\"",
    "\"else\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\">\"",
    "\"<\"",
    "\"&&\"",
    "\"||\"",
    "\"==\"",
    "\"!\"",
    "\"++\"",
    "\"+=\"",
    "\"=\"",
    "\";\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "<IDENTIFIER>",
    "<NUMBER>",
    "<STRING>",
  };

}
