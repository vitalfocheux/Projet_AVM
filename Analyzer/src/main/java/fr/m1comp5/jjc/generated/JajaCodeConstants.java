/* Generated By:JJTree&JavaCC: Do not edit this line. JajaCodeConstants.java */
package fr.m1comp5.jjc.generated;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JajaCodeConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INIT = 5;
  /** RegularExpression Id. */
  int SWAP = 6;
  /** RegularExpression Id. */
  int NEW = 7;
  /** RegularExpression Id. */
  int NEWA = 8;
  /** RegularExpression Id. */
  int INVOKE = 9;
  /** RegularExpression Id. */
  int LENGTH = 10;
  /** RegularExpression Id. */
  int RETURN = 11;
  /** RegularExpression Id. */
  int WRITE = 12;
  /** RegularExpression Id. */
  int WRITELN = 13;
  /** RegularExpression Id. */
  int PUSH = 14;
  /** RegularExpression Id. */
  int POP = 15;
  /** RegularExpression Id. */
  int LOAD = 16;
  /** RegularExpression Id. */
  int ALOAD = 17;
  /** RegularExpression Id. */
  int STORE = 18;
  /** RegularExpression Id. */
  int ASTORE = 19;
  /** RegularExpression Id. */
  int IF = 20;
  /** RegularExpression Id. */
  int GOTO = 21;
  /** RegularExpression Id. */
  int INC = 22;
  /** RegularExpression Id. */
  int AINC = 23;
  /** RegularExpression Id. */
  int NOP = 24;
  /** RegularExpression Id. */
  int JCSTOP = 25;
  /** RegularExpression Id. */
  int NEG = 26;
  /** RegularExpression Id. */
  int NOT = 27;
  /** RegularExpression Id. */
  int ADD = 28;
  /** RegularExpression Id. */
  int SUB = 29;
  /** RegularExpression Id. */
  int MUL = 30;
  /** RegularExpression Id. */
  int DIV = 31;
  /** RegularExpression Id. */
  int CMP = 32;
  /** RegularExpression Id. */
  int SUP = 33;
  /** RegularExpression Id. */
  int OR = 34;
  /** RegularExpression Id. */
  int AND = 35;
  /** RegularExpression Id. */
  int SEMICOLON = 36;
  /** RegularExpression Id. */
  int COMMA = 37;
  /** RegularExpression Id. */
  int LPAR = 38;
  /** RegularExpression Id. */
  int RPAR = 39;
  /** RegularExpression Id. */
  int INT = 40;
  /** RegularExpression Id. */
  int BOOL = 41;
  /** RegularExpression Id. */
  int VOID = 42;
  /** RegularExpression Id. */
  int VAR = 43;
  /** RegularExpression Id. */
  int CST = 44;
  /** RegularExpression Id. */
  int METH = 45;
  /** RegularExpression Id. */
  int TRUE = 46;
  /** RegularExpression Id. */
  int FALSE = 47;
  /** RegularExpression Id. */
  int IDENTIFIER = 48;
  /** RegularExpression Id. */
  int NUMBER = 49;
  /** RegularExpression Id. */
  int STRING = 50;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"init\"",
    "\"swap\"",
    "\"new\"",
    "\"newarray\"",
    "\"invoke\"",
    "\"length\"",
    "\"return\"",
    "\"write\"",
    "\"writeln\"",
    "\"push\"",
    "\"pop\"",
    "\"load\"",
    "\"aload\"",
    "\"store\"",
    "\"astore\"",
    "\"if\"",
    "\"goto\"",
    "\"inc\"",
    "\"ainc\"",
    "\"nop\"",
    "\"jcstop\"",
    "\"neg\"",
    "\"not\"",
    "\"add\"",
    "\"sub\"",
    "\"mul\"",
    "\"div\"",
    "\"cmp\"",
    "\"sup\"",
    "\"or\"",
    "\"and\"",
    "\";\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"entier\"",
    "\"booleen\"",
    "\"void\"",
    "\"var\"",
    "\"cst\"",
    "\"meth\"",
    "\"vrai\"",
    "\"faux\"",
    "<IDENTIFIER>",
    "<NUMBER>",
    "<STRING>",
  };

}
